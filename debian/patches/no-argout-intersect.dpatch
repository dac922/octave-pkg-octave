#! /bin/sh /usr/share/dpatch/dpatch-run
## -*- diff -*-
## no-argout-intersect.dpatch by Rafael Laboissiere <rafael@debian.org>
##
## DP: Cope with the case where nargout == 0
## DP: This was taken from package bugfix-3.0.5 of Otave Forge

@DPATCH@
--- ../../../octave/octave/scripts/set/intersect.m	2009-02-18 07:57:46.000000000 +0100
+++ ../../octave-bugfix-3.0.5/octave-bugfix-3.0.5/inst/intersect.m	2009-05-08 15:16:47.000000000 +0200
@@ -1,5 +1,5 @@
+## Copyright (C) 2008, 2009 Jaroslav Hajek
 ## Copyright (C) 2000, 2006, 2007 Paul Kienzle
-## Copyright (C) 2008 Jaroslav Hajek
 ##
 ## This file is part of Octave.
 ##
@@ -22,7 +22,7 @@
 ## @deftypefnx {Function File} {[@var{c}, @var{ia}, @var{ib}] =} intersect (@var{a}, @var{b})
 ##
 ## Return the elements in both @var{a} and @var{b}, sorted in ascending
-## order. If @var{a} and @var{b} are both column vectors return a column
+## order.  If @var{a} and @var{b} are both column vectors return a column
 ## vector, otherwise return a row vector.
 ##
 ## Return index vectors @var{ia} and @var{ib} such that @code{a(ia)==c} and
@@ -49,6 +49,9 @@
     if (nargout > 1)
       [a, ja] = unique (a, varargin{:});
       [b, jb] = unique (b, varargin{:});
+    else
+      a = unique (a, varargin{:});
+      b = unique (b, varargin{:});
     endif
 
     if (nargin > 2)
@@ -87,7 +90,7 @@
 %! a = [3 2 4 5 7 6 5 1 0 13 13];
 %! b = [3 5 12 1 1 7];
 %! [c,ia,ib] = intersect(a,b);
-%! assert( c,[1 3 5 7]);
+%! assert(c,[1 3 5 7]);
 %! assert(ia,[8 1 7 5]);
 %! assert(ib,[5 1 2 6]);
 %! assert(a(ia),c);
@@ -101,3 +104,8 @@
 %! assert(ib,[3;1]);
 %! assert(a(ia,:),c);
 %! assert(b(ib,:),c);
+%!test
+%! a = [1 1 1 2 2 2];
+%! b = [1 2 3 4 5 6];
+%! c = intersect(a,b);
+%! assert(c, [1,2]);
