#! /bin/sh /usr/share/dpatch/dpatch-run
## -*- diff -*-
## pretty-png-svg-print.dpatch by Rafael Laboissiere <rafael@debian.org>
##
## DP: Restore pretty printing in png and svg formats (closes: Bug#519572).
## DP: Thanks to Ben Abbott for the patch.

@DPATCH@
# HG changeset patch
# User Ben Abbott <bpabbott@mac.com>
# Date 1236938898 -28800
# Node ID 258596f5071a4c350450f289116053582a2699d0
# Parent  3ecbc236e2e0dc9c435e2b76667715c998fc5714
print.m: Revert to old behavior for -S<num>,<num>.

diff -r 3ecbc236e2e0 -r 258596f5071a scripts/plot/print.m
--- a/scripts/plot/print.m	Tue Mar 10 21:54:49 2009 -0400
+++ b/scripts/plot/print.m	Fri Mar 13 18:08:18 2009 +0800
@@ -427,11 +427,36 @@
     endif
     set (gcf, "__pixels_per_inch__", resolution)
 
-    if (debug)
-      drawnow (new_terminal, name, mono, debug_file);
-    else
-      drawnow (new_terminal, name, mono);
-    endif
+    unwind_protect
+      if (! isempty (size))
+        size_in_pixels = sscanf (size ,"%d, %d");
+        size_in_pixels = reshape (size_in_pixels, [1, numel(size_in_pixels)]);
+        size_in_inches = size_in_pixels ./ resolution;
+        p.paperunits = get (gcf, "paperunits");
+        p.papertype = get (gcf, "papertype");
+        p.papersize = get (gcf, "papersize");
+        p.paperposition = get (gcf, "paperposition");
+        p.paperpositionmode = get (gcf, "paperpositionmode");
+        set (gcf, "paperunits", "inches");
+        set (gcf, "papertype", "<custom>");
+        set (gcf, "papersize", size_in_inches);
+        set (gcf, "paperposition", [0, 0, size_in_inches]);
+        set (gcf, "paperpositionmode", "manual");
+      endif
+      if (debug)
+        drawnow (new_terminal, name, mono, debug_file);
+      else
+        drawnow (new_terminal, name, mono);
+      endif
+    unwind_protect_cleanup
+      ## FIXME - it would be preferred to delete the added properties here.
+      if (! isempty (size))
+        props = fieldnames (p);
+        for n = 1:numel(props)
+          set (gcf, props{n}, p.(props{n}))
+        endfor
+      endif
+    end_unwind_protect
 
     if (! isempty (convertname))
       command = sprintf ("convert '%s' '%s'", name, convertname);
